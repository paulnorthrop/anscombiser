% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_stats.R
\name{make_stats}
\alias{make_stats}
\title{Modify a dataset}
\usage{
make_stats(x, stats)
}
\arguments{
\item{x}{a numeric matrix or data frame.  Each column contains observations
on a different variable.  Missing observations are not allowed.}

\item{stats}{A list of sample summary statistics that must include
\itemize{
\item \code{means} The sample means of each variable.
\item \code{variances} The sample means of each variable.
\item \code{correlation} The sample correlation matrix.
}}
}
\value{
A dataset with the same format as \code{x}.  The returned dataset has the
same summary statistics as those in \code{stats}, except perhaps for the sample
size.
}
\description{
Modifies a dataset \code{x} so that it has specified sample summary statistics.
The summary statistics can be created from a target dataset with the same
number of variables as \code{x} using \code{\link{get_stats}}.
}
\examples{
### 2D examples

# Map of italy
library(maps)
library(ggplot2)
italy <- map_data("world", region = "italy")[, 1:2]
anscombe_stats <- get_stats(anscombe[, c(1, 5)])
new_italy <- make_stats(italy, anscombe_stats)
anscombe_stats
get_stats(new_italy)

# Old Faithful geyser data
new_faithful <- make_stats(faithful, anscombe_stats)
anscombe_stats
get_stats(new_faithful)

# Plot to compare before and after
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
plot(italy)
plot(new_italy)
plot(faithful)
plot(new_faithful)
par(op)

# Dinosaur and the UK
library(datasauRus)

dino <- datasaurus_dozen_wide[, c("dino_x", "dino_y")]
dino_stats <- get_stats(dino)
UK <- mapdata("world", region = "UK")[, 1:2]
new_UK <- make_stats(UK, dino_stats)
dino_stats
get_stats(new_UK)

plot(new_UK)

### 3D examples
trees_stats <- get_stats(trees)
new_randu <- make_stats(randu, trees_stats)
trees_stats
get_stats(new_randu)

# Plot to compare trees and new_randu
op <- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))
pairs(trees)
pairs(new_randu)
par(op)
}
